<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="677"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="677"> </text>
<g id="frames">
<g>
<title>all (134 samples, 100.00%)</title><rect x="10.0" y="643.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="654.0">all</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (16 samples, 11.94%)</title><rect x="10.0" y="627.0" width="140.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="638.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.consumeLoop (16 samples, 11.94%)</title><rect x="10.0" y="611.0" width="140.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.poll (16 samples, 11.94%)</title><rect x="10.0" y="595.0" width="140.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="606.0">com/linecorp/decat..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.pausePartitions (1 samples, 0.75%)</title><rect x="10.0" y="579.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.partitionsNeedsPause (1 samples, 0.75%)</title><rect x="10.0" y="563.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.75%)</title><rect x="10.0" y="547.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.75%)</title><rect x="10.0" y="531.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.resumePartitions (2 samples, 1.49%)</title><rect x="18.8" y="579.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.8" y="590.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.partitionsNeedsResume (2 samples, 1.49%)</title><rect x="18.8" y="563.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.75%)</title><rect x="27.6" y="547.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.75%)</title><rect x="27.6" y="531.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.75%)</title><rect x="27.6" y="515.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.75%)</title><rect x="27.6" y="499.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.75%)</title><rect x="27.6" y="483.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (1 samples, 0.75%)</title><rect x="27.6" y="467.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.75%)</title><rect x="27.6" y="451.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.75%)</title><rect x="27.6" y="435.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.6" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts$$Lambda$140/2091955136.test (1 samples, 0.75%)</title><rect x="27.6" y="419.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.6" y="430.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.updatePartitionsStatus (3 samples, 2.24%)</title><rect x="36.4" y="579.0" width="26.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.4" y="590.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.updateHighWatermarks (3 samples, 2.24%)</title><rect x="36.4" y="563.0" width="26.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.4" y="574.0">c..</text>
</g>
<g>
<title>java/util/HashMap$Values.forEach (3 samples, 2.24%)</title><rect x="36.4" y="547.0" width="26.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.4" y="558.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts$$Lambda$135/2051902380.accept (3 samples, 2.24%)</title><rect x="36.4" y="531.0" width="26.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.4" y="542.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.updateHighWatermark (3 samples, 2.24%)</title><rect x="36.4" y="515.0" width="26.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.4" y="526.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl.updateHighWatermark (3 samples, 2.24%)</title><rect x="36.4" y="499.0" width="26.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.4" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (3 samples, 2.24%)</title><rect x="36.4" y="483.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.4" y="494.0">c..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 3.73%)</title><rect x="62.8" y="579.0" width="44.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="590.0">java..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager$$Lambda$134/1092206781.accept (4 samples, 2.99%)</title><rect x="62.8" y="563.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="574.0">com..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler.receive (4 samples, 2.99%)</title><rect x="62.8" y="547.0" width="35.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.8" y="558.0">com..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.addRequest (3 samples, 2.24%)</title><rect x="62.8" y="531.0" width="26.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.8" y="542.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionProcessor.addTask (3 samples, 2.24%)</title><rect x="62.8" y="515.0" width="26.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.8" y="526.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.putTask (2 samples, 1.49%)</title><rect x="71.6" y="499.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 1.49%)</title><rect x="71.6" y="483.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 1.49%)</title><rect x="71.6" y="467.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 1.49%)</title><rect x="71.6" y="451.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 1.49%)</title><rect x="71.6" y="435.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 1.49%)</title><rect x="71.6" y="419.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 1.49%)</title><rect x="71.6" y="403.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.6" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.registerOffset (1 samples, 0.75%)</title><rect x="89.3" y="531.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.3" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl.reportFetchedOffset (1 samples, 0.75%)</title><rect x="89.3" y="515.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.3" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords.iterator (1 samples, 0.75%)</title><rect x="98.1" y="563.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.1" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable.iterator (1 samples, 0.75%)</title><rect x="98.1" y="547.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/ConsumerRecords$ConcatenatedIterable$1.&lt;init&gt; (1 samples, 0.75%)</title><rect x="98.1" y="531.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.75%)</title><rect x="98.1" y="515.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.75%)</title><rect x="98.1" y="499.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.iterator (1 samples, 0.75%)</title><rect x="98.1" y="483.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueIterator.&lt;init&gt; (1 samples, 0.75%)</title><rect x="98.1" y="467.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.75%)</title><rect x="98.1" y="451.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.1" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (5 samples, 3.73%)</title><rect x="106.9" y="579.0" width="44.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.9" y="590.0">org/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (5 samples, 3.73%)</title><rect x="106.9" y="563.0" width="44.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.9" y="574.0">org/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (4 samples, 2.99%)</title><rect x="106.9" y="547.0" width="35.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.9" y="558.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (2 samples, 1.49%)</title><rect x="106.9" y="531.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.9" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (2 samples, 1.49%)</title><rect x="106.9" y="515.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.9" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.75%)</title><rect x="106.9" y="499.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.9" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.handleTimedOutRequests (1 samples, 0.75%)</title><rect x="106.9" y="483.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.9" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/InFlightRequests.nodesWithTimedOutRequests (1 samples, 0.75%)</title><rect x="106.9" y="467.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.9" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$UnsentRequests.clean (1 samples, 0.75%)</title><rect x="115.7" y="499.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$BaseIterator.remove (1 samples, 0.75%)</title><rect x="115.7" y="483.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.75%)</title><rect x="115.7" y="467.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/Node.hashCode (1 samples, 0.75%)</title><rect x="115.7" y="451.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.7" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.collectFetch (1 samples, 0.75%)</title><rect x="124.5" y="531.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.5" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (1 samples, 0.75%)</title><rect x="124.5" y="515.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.5" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1900 (1 samples, 0.75%)</title><rect x="124.5" y="499.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.5" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (1 samples, 0.75%)</title><rect x="124.5" y="483.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.5" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (1 samples, 0.75%)</title><rect x="124.5" y="467.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.5" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (1 samples, 0.75%)</title><rect x="124.5" y="451.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.5" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (1 samples, 0.75%)</title><rect x="124.5" y="435.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.5" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (1 samples, 0.75%)</title><rect x="124.5" y="419.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.5" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (1 samples, 0.75%)</title><rect x="124.5" y="403.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.5" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (1 samples, 0.75%)</title><rect x="124.5" y="387.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.5" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (1 samples, 0.75%)</title><rect x="124.5" y="371.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.5" y="382.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (1 samples, 0.75%)</title><rect x="124.5" y="355.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.5" y="366.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Time.timer (1 samples, 0.75%)</title><rect x="133.3" y="531.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.3" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.75%)</title><rect x="142.1" y="547.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.1" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/LogContext$LocationAwareKafkaLogger.isDebugEnabled (1 samples, 0.75%)</title><rect x="142.1" y="531.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.1" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/FetchRequest$Builder.rackId (1 samples, 0.75%)</title><rect x="142.1" y="515.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (86 samples, 64.18%)</title><rect x="150.9" y="627.0" width="757.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.9" y="638.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (86 samples, 64.18%)</title><rect x="150.9" y="611.0" width="757.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.9" y="622.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (86 samples, 64.18%)</title><rect x="150.9" y="595.0" width="757.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.9" y="606.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$359/1095964687.run (77 samples, 57.46%)</title><rect x="150.9" y="579.0" width="678.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.9" y="590.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$359/1095964687.run</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$81 (77 samples, 57.46%)</title><rect x="150.9" y="563.0" width="678.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.9" y="574.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$81</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask (77 samples, 57.46%)</title><rect x="150.9" y="547.0" width="678.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.9" y="558.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess (77 samples, 57.46%)</title><rect x="150.9" y="531.0" width="678.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.9" y="542.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess</text>
</g>
<g>
<title>[vdso] (1 samples, 0.75%)</title><rect x="168.5" y="515.0" width="8.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="171.5" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/AbstractDecatonProperties.get (1 samples, 0.75%)</title><rect x="177.3" y="515.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.75%)</title><rect x="177.3" y="499.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.75%)</title><rect x="177.3" y="483.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.75%)</title><rect x="177.3" y="467.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.3" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl.completeWith (4 samples, 2.99%)</title><rect x="186.1" y="515.0" width="35.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.1" y="526.0">com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.75%)</title><rect x="212.5" y="499.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.75%)</title><rect x="212.5" y="483.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.75%)</title><rect x="212.5" y="467.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.75%)</title><rect x="212.5" y="451.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.5" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl$$Lambda$370/205074445.accept (1 samples, 0.75%)</title><rect x="212.5" y="435.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.5" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl.lambda$completeWith$2 (1 samples, 0.75%)</title><rect x="212.5" y="419.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.75%)</title><rect x="212.5" y="403.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.75%)</title><rect x="212.5" y="387.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.75%)</title><rect x="212.5" y="371.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.75%)</title><rect x="212.5" y="355.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.5" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.extract (11 samples, 8.21%)</title><rect x="221.3" y="515.0" width="96.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.3" y="526.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$46/1624820151.extract (11 samples, 8.21%)</title><rect x="221.3" y="499.0" width="96.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.3" y="510.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$4 (11 samples, 8.21%)</title><rect x="221.3" y="483.0" width="96.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.3" y="494.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (11 samples, 8.21%)</title><rect x="221.3" y="467.0" width="96.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.3" y="478.0">com/linecor..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (11 samples, 8.21%)</title><rect x="221.3" y="451.0" width="96.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.3" y="462.0">com/linecor..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (11 samples, 8.21%)</title><rect x="221.3" y="435.0" width="96.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.3" y="446.0">com/fasterx..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (1 samples, 0.75%)</title><rect x="221.3" y="419.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.3" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (1 samples, 0.75%)</title><rect x="221.3" y="403.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.3" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (1 samples, 0.75%)</title><rect x="221.3" y="387.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.3" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (1 samples, 0.75%)</title><rect x="221.3" y="371.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.3" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (1 samples, 0.75%)</title><rect x="221.3" y="355.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.3" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (1 samples, 0.75%)</title><rect x="221.3" y="339.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.3" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (10 samples, 7.46%)</title><rect x="230.1" y="419.0" width="88.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.1" y="430.0">com/faster..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (1 samples, 0.75%)</title><rect x="230.1" y="403.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.75%)</title><rect x="230.1" y="387.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.1" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.75%)</title><rect x="230.1" y="371.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (1 samples, 0.75%)</title><rect x="239.0" y="403.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.0" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (1 samples, 0.75%)</title><rect x="239.0" y="387.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.0" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (1 samples, 0.75%)</title><rect x="239.0" y="371.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.0" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (1 samples, 0.75%)</title><rect x="239.0" y="355.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.0" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createDeserializationContext (1 samples, 0.75%)</title><rect x="247.8" y="403.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.8" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (1 samples, 0.75%)</title><rect x="247.8" y="387.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.8" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.readRootValue (7 samples, 5.22%)</title><rect x="256.6" y="403.0" width="61.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.6" y="414.0">com/fa..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (7 samples, 5.22%)</title><rect x="256.6" y="387.0" width="61.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.6" y="398.0">com/fa..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 1.49%)</title><rect x="256.6" y="371.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.6" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.75%)</title><rect x="265.4" y="355.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.4" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.75%)</title><rect x="265.4" y="339.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.4" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.75%)</title><rect x="265.4" y="323.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.4" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (5 samples, 3.73%)</title><rect x="274.2" y="371.0" width="44.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.2" y="382.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (5 samples, 3.73%)</title><rect x="274.2" y="355.0" width="44.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.2" y="366.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (5 samples, 3.73%)</title><rect x="274.2" y="339.0" width="44.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.2" y="350.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 1.49%)</title><rect x="274.2" y="323.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.2" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.75%)</title><rect x="274.2" y="307.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.2" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.75%)</title><rect x="274.2" y="291.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.2" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.75%)</title><rect x="274.2" y="275.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (1 samples, 0.75%)</title><rect x="274.2" y="259.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.2" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (1 samples, 0.75%)</title><rect x="283.0" y="307.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.0" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (1 samples, 0.75%)</title><rect x="291.8" y="323.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.8" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (1 samples, 0.75%)</title><rect x="291.8" y="307.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.8" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (1 samples, 0.75%)</title><rect x="291.8" y="291.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.8" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (1 samples, 0.75%)</title><rect x="291.8" y="275.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.75%)</title><rect x="291.8" y="259.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.8" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (1 samples, 0.75%)</title><rect x="300.6" y="323.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.6" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (1 samples, 0.75%)</title><rect x="300.6" y="307.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (1 samples, 0.75%)</title><rect x="300.6" y="291.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.6" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (1 samples, 0.75%)</title><rect x="300.6" y="275.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.6" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.75%)</title><rect x="300.6" y="259.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.6" y="270.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.75%)</title><rect x="300.6" y="243.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.6" y="254.0"></text>
</g>
<g>
<title>sun/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.75%)</title><rect x="300.6" y="227.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.6" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.startBuilding (1 samples, 0.75%)</title><rect x="309.4" y="323.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.4" y="334.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (58 samples, 43.28%)</title><rect x="318.2" y="515.0" width="510.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.2" y="526.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process</text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.close (6 samples, 4.48%)</title><rect x="318.2" y="499.0" width="52.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.2" y="510.0">com/l..</text>
</g>
<g>
<title>org/slf4j/MDC.remove (6 samples, 4.48%)</title><rect x="318.2" y="483.0" width="52.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.2" y="494.0">org/s..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (6 samples, 4.48%)</title><rect x="318.2" y="467.0" width="52.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.2" y="478.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (3 samples, 2.24%)</title><rect x="318.2" y="451.0" width="26.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.2" y="462.0">c..</text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 2.24%)</title><rect x="318.2" y="435.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.2" y="446.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (3 samples, 2.24%)</title><rect x="318.2" y="419.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.2" y="430.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 2.24%)</title><rect x="318.2" y="403.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (3 samples, 2.24%)</title><rect x="344.6" y="451.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/HashMap.remove (3 samples, 2.24%)</title><rect x="344.6" y="435.0" width="26.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/HashMap.removeNode (3 samples, 2.24%)</title><rect x="344.6" y="419.0" width="26.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.6" y="430.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (1 samples, 0.75%)</title><rect x="371.0" y="499.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.75%)</title><rect x="371.0" y="483.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.loggingContext (14 samples, 10.45%)</title><rect x="379.9" y="499.0" width="123.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.9" y="510.0">com/linecorp/de..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.&lt;init&gt; (14 samples, 10.45%)</title><rect x="379.9" y="483.0" width="123.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="494.0">com/linecorp/de..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (2 samples, 1.49%)</title><rect x="388.7" y="467.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 1.49%)</title><rect x="388.7" y="451.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.75%)</title><rect x="388.7" y="435.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.75%)</title><rect x="388.7" y="419.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.7" y="430.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.75%)</title><rect x="397.5" y="435.0" width="8.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="400.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.75%)</title><rect x="406.3" y="467.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.75%)</title><rect x="406.3" y="451.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.75%)</title><rect x="406.3" y="435.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.3" y="446.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (10 samples, 7.46%)</title><rect x="415.1" y="467.0" width="88.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.1" y="478.0">org/slf4j/..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (10 samples, 7.46%)</title><rect x="415.1" y="451.0" width="88.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.1" y="462.0">ch/qos/log..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (2 samples, 1.49%)</title><rect x="415.1" y="435.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.1" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 1.49%)</title><rect x="415.1" y="419.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.1" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (2 samples, 1.49%)</title><rect x="415.1" y="403.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.1" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 1.49%)</title><rect x="415.1" y="387.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.75%)</title><rect x="423.9" y="371.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (8 samples, 5.97%)</title><rect x="432.7" y="435.0" width="70.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.7" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 5.22%)</title><rect x="441.5" y="419.0" width="61.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.5" y="430.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 3.73%)</title><rect x="459.1" y="403.0" width="44.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.1" y="414.0">java..</text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 1.49%)</title><rect x="476.7" y="387.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="398.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.75%)</title><rect x="494.3" y="387.0" width="8.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="497.3" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.push (30 samples, 22.39%)</title><rect x="503.1" y="499.0" width="264.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.1" y="510.0">com/linecorp/decaton/processor/runt..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.pushDownStream (30 samples, 22.39%)</title><rect x="503.1" y="483.0" width="264.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.1" y="494.0">com/linecorp/decaton/processor/runt..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.75%)</title><rect x="511.9" y="467.0" width="8.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="514.9" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.75%)</title><rect x="511.9" y="451.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="514.9" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.75%)</title><rect x="511.9" y="435.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="514.9" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.75%)</title><rect x="511.9" y="419.0" width="8.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="514.9" y="430.0"></text>
</g>
<g>
<title>JfrBackend::is_event_enabled(TraceEventId) (1 samples, 0.75%)</title><rect x="511.9" y="403.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="514.9" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$290/1201566381.process (23 samples, 17.16%)</title><rect x="520.7" y="467.0" width="202.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.7" y="478.0">com/linecorp/decaton/bench..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$5 (23 samples, 17.16%)</title><rect x="520.7" y="451.0" width="202.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.7" y="462.0">com/linecorp/decaton/bench..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (23 samples, 17.16%)</title><rect x="520.7" y="435.0" width="202.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.7" y="446.0">com/linecorp/decaton/bench..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (21 samples, 15.67%)</title><rect x="538.4" y="419.0" width="184.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.4" y="430.0">com/linecorp/decaton/ben..</text>
</g>
<g>
<title>java/lang/Thread.sleep (21 samples, 15.67%)</title><rect x="538.4" y="403.0" width="184.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.4" y="414.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>JVM_Sleep (19 samples, 14.18%)</title><rect x="547.2" y="387.0" width="167.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="550.2" y="398.0">JVM_Sleep</text>
</g>
<g>
<title>__clock_gettime (3 samples, 2.24%)</title><rect x="556.0" y="371.0" width="26.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="559.0" y="382.0">_..</text>
</g>
<g>
<title>[vdso] (2 samples, 1.49%)</title><rect x="564.8" y="355.0" width="17.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="567.8" y="366.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.75%)</title><rect x="582.4" y="371.0" width="8.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (14 samples, 10.45%)</title><rect x="591.2" y="371.0" width="123.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="594.2" y="382.0">os::sleep(Threa..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.75%)</title><rect x="608.8" y="355.0" width="8.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="611.8" y="366.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.75%)</title><rect x="608.8" y="339.0" width="8.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="611.8" y="350.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 4.48%)</title><rect x="617.6" y="355.0" width="52.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="620.6" y="366.0">__lll..</text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.75%)</title><rect x="670.4" y="355.0" width="8.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="673.4" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.75%)</title><rect x="679.3" y="355.0" width="8.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="682.3" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.75%)</title><rect x="688.1" y="355.0" width="8.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="691.1" y="366.0"></text>
</g>
<g>
<title>pthread_cond_destroy@@GLIBC_2.3.2 (1 samples, 0.75%)</title><rect x="696.9" y="355.0" width="8.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="699.9" y="366.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.75%)</title><rect x="705.7" y="355.0" width="8.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="708.7" y="366.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.75%)</title><rect x="714.5" y="387.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.5" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (2 samples, 1.49%)</title><rect x="723.3" y="467.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (2 samples, 1.49%)</title><rect x="723.3" y="451.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 2.24%)</title><rect x="740.9" y="467.0" width="26.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 1.49%)</title><rect x="749.7" y="451.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 1.49%)</title><rect x="749.7" y="435.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 1.49%)</title><rect x="749.7" y="419.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.75%)</title><rect x="749.7" y="403.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.cleanStack (1 samples, 0.75%)</title><rect x="749.7" y="387.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.7" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl$$Lambda$368/1292490458.accept (1 samples, 0.75%)</title><rect x="749.7" y="371.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.75%)</title><rect x="758.5" y="403.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 5.22%)</title><rect x="767.3" y="499.0" width="61.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.3" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 5.22%)</title><rect x="767.3" y="483.0" width="61.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.3" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 5.22%)</title><rect x="767.3" y="467.0" width="61.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.3" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 5.22%)</title><rect x="767.3" y="451.0" width="61.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.3" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 5.22%)</title><rect x="767.3" y="435.0" width="61.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.3" y="446.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.cleanStack (7 samples, 5.22%)</title><rect x="767.3" y="419.0" width="61.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.3" y="430.0">java/u..</text>
</g>
<g>
<title>itable stub (7 samples, 5.22%)</title><rect x="767.3" y="403.0" width="61.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="770.3" y="414.0">itable..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.75%)</title><rect x="829.0" y="579.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.75%)</title><rect x="829.0" y="563.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.75%)</title><rect x="829.0" y="547.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.75%)</title><rect x="829.0" y="531.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 5.97%)</title><rect x="837.8" y="579.0" width="70.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.8" y="590.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 5.97%)</title><rect x="837.8" y="563.0" width="70.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.8" y="574.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 1.49%)</title><rect x="837.8" y="547.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 1.49%)</title><rect x="837.8" y="531.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 1.49%)</title><rect x="837.8" y="515.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 1.49%)</title><rect x="837.8" y="499.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 1.49%)</title><rect x="837.8" y="483.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 4.48%)</title><rect x="855.4" y="547.0" width="52.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.4" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 4.48%)</title><rect x="855.4" y="531.0" width="52.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.4" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 4.48%)</title><rect x="855.4" y="515.0" width="52.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.4" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 4.48%)</title><rect x="855.4" y="499.0" width="52.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.4" y="510.0">java/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (1 samples, 0.75%)</title><rect x="908.2" y="627.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.2" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (1 samples, 0.75%)</title><rect x="908.2" y="611.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.2" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.75%)</title><rect x="908.2" y="595.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.2" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.checkDisconnects (1 samples, 0.75%)</title><rect x="908.2" y="579.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.iterator (1 samples, 0.75%)</title><rect x="908.2" y="563.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.2" y="574.0"></text>
</g>
<g>
<title>start_thread (31 samples, 23.13%)</title><rect x="917.0" y="627.0" width="273.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="920.0" y="638.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (31 samples, 23.13%)</title><rect x="917.0" y="611.0" width="273.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="920.0" y="622.0">java_start(Thread*)</text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 11.94%)</title><rect x="917.0" y="595.0" width="140.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="920.0" y="606.0">GangWorker::loop()</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 11.94%)</title><rect x="917.0" y="579.0" width="140.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="920.0" y="590.0">G1ParTask::work(un..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (16 samples, 11.94%)</title><rect x="917.0" y="563.0" width="140.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="920.0" y="574.0">G1ParEvacuateFollo..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (15 samples, 11.19%)</title><rect x="917.0" y="547.0" width="132.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.0" y="558.0">G1ParScanThreadS..</text>
</g>
<g>
<title>G1DefaultParGCAllocator::alloc_buffer(InCSetState, unsigned char) (1 samples, 0.75%)</title><rect x="934.6" y="531.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="937.6" y="542.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (11 samples, 8.21%)</title><rect x="943.4" y="531.0" width="96.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="946.4" y="542.0">G1ParScanTh..</text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*) (6 samples, 4.48%)</title><rect x="987.5" y="515.0" width="52.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="990.5" y="526.0">Insta..</text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) (2 samples, 1.49%)</title><rect x="1022.7" y="499.0" width="17.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1025.7" y="510.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.75%)</title><rect x="1040.3" y="531.0" width="8.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1043.3" y="542.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.75%)</title><rect x="1049.1" y="547.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1052.1" y="558.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 11.19%)</title><rect x="1057.9" y="595.0" width="132.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1060.9" y="606.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 11.19%)</title><rect x="1057.9" y="579.0" width="132.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.9" y="590.0">JavaThread::thre..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 11.19%)</title><rect x="1057.9" y="563.0" width="132.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.9" y="574.0">CompileBroker::c..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 10.45%)</title><rect x="1057.9" y="547.0" width="123.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.9" y="558.0">CompileBroker::..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (12 samples, 8.96%)</title><rect x="1057.9" y="531.0" width="105.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.9" y="542.0">C2Compiler::c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (12 samples, 8.96%)</title><rect x="1057.9" y="515.0" width="105.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.9" y="526.0">Compile::Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 5.22%)</title><rect x="1057.9" y="499.0" width="61.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1060.9" y="510.0">Compil..</text>
</g>
<g>
<title>Matcher::match() (2 samples, 1.49%)</title><rect x="1057.9" y="483.0" width="17.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.9" y="494.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 1.49%)</title><rect x="1057.9" y="467.0" width="17.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1060.9" y="478.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.75%)</title><rect x="1057.9" y="451.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.9" y="462.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="451.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1069.7" y="462.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="435.0" width="8.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1069.7" y="446.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="419.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1069.7" y="430.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="403.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1069.7" y="414.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="387.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1069.7" y="398.0"></text>
</g>
<g>
<title>State::_sub_Op_AndL(Node const*) (1 samples, 0.75%)</title><rect x="1066.7" y="371.0" width="8.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1069.7" y="382.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 3.73%)</title><rect x="1075.5" y="483.0" width="44.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1078.5" y="494.0">Phas..</text>
</g>
<g>
<title>Arena::set_size_in_bytes(unsigned long) (1 samples, 0.75%)</title><rect x="1075.5" y="467.0" width="8.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.5" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.75%)</title><rect x="1084.3" y="467.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.3" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.75%)</title><rect x="1093.1" y="467.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.1" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 1.49%)</title><rect x="1101.9" y="467.0" width="17.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.9" y="478.0"></text>
</g>
<g>
<title>storeImmB0Node::oper_input_base() const (1 samples, 0.75%)</title><rect x="1110.7" y="451.0" width="8.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1113.7" y="462.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 2.24%)</title><rect x="1119.6" y="499.0" width="26.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1122.6" y="510.0">C..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (2 samples, 1.49%)</title><rect x="1119.6" y="483.0" width="17.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.6" y="494.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.75%)</title><rect x="1119.6" y="467.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1122.6" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.75%)</title><rect x="1128.4" y="467.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.4" y="478.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.75%)</title><rect x="1128.4" y="451.0" width="8.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.4" y="462.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.75%)</title><rect x="1137.2" y="483.0" width="8.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.2" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.75%)</title><rect x="1137.2" y="467.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.2" y="478.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseTransform*) const (1 samples, 0.75%)</title><rect x="1137.2" y="451.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.2" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.49%)</title><rect x="1146.0" y="499.0" width="17.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.0" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.49%)</title><rect x="1146.0" y="483.0" width="17.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 1.49%)</title><rect x="1146.0" y="467.0" width="17.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 1.49%)</title><rect x="1146.0" y="451.0" width="17.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 1.49%)</title><rect x="1146.0" y="435.0" width="17.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 1.49%)</title><rect x="1146.0" y="419.0" width="17.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.0" y="430.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.75%)</title><rect x="1146.0" y="403.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.0" y="414.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.75%)</title><rect x="1146.0" y="387.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.0" y="398.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.75%)</title><rect x="1146.0" y="371.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.0" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.75%)</title><rect x="1146.0" y="355.0" width="8.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.0" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.75%)</title><rect x="1146.0" y="339.0" width="8.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.0" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.75%)</title><rect x="1146.0" y="323.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.0" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.75%)</title><rect x="1146.0" y="307.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.0" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.75%)</title><rect x="1146.0" y="291.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.0" y="302.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.75%)</title><rect x="1146.0" y="275.0" width="8.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.0" y="286.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.75%)</title><rect x="1146.0" y="259.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.0" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1146.0" y="243.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.0" y="254.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1146.0" y="227.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.0" y="238.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.75%)</title><rect x="1146.0" y="211.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.0" y="222.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.75%)</title><rect x="1146.0" y="195.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.0" y="206.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1146.0" y="179.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.0" y="190.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.75%)</title><rect x="1146.0" y="163.0" width="8.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.0" y="174.0"></text>
</g>
<g>
<title>Atomic::inc(short volatile*) (1 samples, 0.75%)</title><rect x="1146.0" y="147.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.0" y="158.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.75%)</title><rect x="1154.8" y="403.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.75%)</title><rect x="1154.8" y="387.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.8" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.75%)</title><rect x="1154.8" y="371.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.75%)</title><rect x="1154.8" y="355.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.75%)</title><rect x="1154.8" y="339.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.75%)</title><rect x="1154.8" y="323.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.75%)</title><rect x="1154.8" y="307.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.8" y="318.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.75%)</title><rect x="1154.8" y="291.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.8" y="302.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.75%)</title><rect x="1154.8" y="275.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.8" y="286.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.75%)</title><rect x="1154.8" y="259.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.8" y="270.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.75%)</title><rect x="1154.8" y="243.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.8" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.75%)</title><rect x="1154.8" y="227.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.8" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.75%)</title><rect x="1154.8" y="211.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.8" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.75%)</title><rect x="1154.8" y="195.0" width="8.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.8" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.75%)</title><rect x="1154.8" y="179.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.8" y="190.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.75%)</title><rect x="1154.8" y="163.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.8" y="174.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.75%)</title><rect x="1154.8" y="147.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.8" y="158.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1154.8" y="131.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.8" y="142.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1154.8" y="115.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.8" y="126.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.75%)</title><rect x="1154.8" y="99.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.8" y="110.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.75%)</title><rect x="1154.8" y="83.0" width="8.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.8" y="94.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.75%)</title><rect x="1154.8" y="67.0" width="8.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.8" y="78.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.75%)</title><rect x="1154.8" y="51.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.8" y="62.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.75%)</title><rect x="1154.8" y="35.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.8" y="46.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (2 samples, 1.49%)</title><rect x="1163.6" y="531.0" width="17.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.6" y="542.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (2 samples, 1.49%)</title><rect x="1163.6" y="515.0" width="17.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.6" y="526.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 1.49%)</title><rect x="1163.6" y="499.0" width="17.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.6" y="510.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.75%)</title><rect x="1163.6" y="483.0" width="8.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.6" y="494.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.75%)</title><rect x="1163.6" y="467.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.6" y="478.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.75%)</title><rect x="1163.6" y="451.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.6" y="462.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.75%)</title><rect x="1163.6" y="435.0" width="8.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.6" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.75%)</title><rect x="1163.6" y="419.0" width="8.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.6" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.75%)</title><rect x="1163.6" y="403.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.6" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.75%)</title><rect x="1163.6" y="387.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.6" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.75%)</title><rect x="1163.6" y="371.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.6" y="382.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.75%)</title><rect x="1163.6" y="355.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.6" y="366.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1163.6" y="339.0" width="8.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.6" y="350.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.75%)</title><rect x="1163.6" y="323.0" width="8.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.6" y="334.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.75%)</title><rect x="1163.6" y="307.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.6" y="318.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.75%)</title><rect x="1163.6" y="291.0" width="8.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.6" y="302.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.75%)</title><rect x="1163.6" y="275.0" width="8.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.6" y="286.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.75%)</title><rect x="1172.4" y="483.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.4" y="494.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.75%)</title><rect x="1172.4" y="467.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.4" y="478.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.75%)</title><rect x="1172.4" y="451.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.4" y="462.0"></text>
</g>
<g>
<title>Metadata::is_methodData() const volatile (1 samples, 0.75%)</title><rect x="1172.4" y="435.0" width="8.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.4" y="446.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.75%)</title><rect x="1181.2" y="547.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.75%)</title><rect x="1181.2" y="531.0" width="8.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.75%)</title><rect x="1181.2" y="515.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.75%)</title><rect x="1181.2" y="499.0" width="8.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
</g>
</svg>
